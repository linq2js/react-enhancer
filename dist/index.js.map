{"version":3,"sources":["../index.js"],"names":["contexts","stateful","render","StatefulComponent","type","inputs","hookContext","index","hooks","hook","arrayEqual","length","Error","reducer","initialState","onChange","state","setState","dispatch","args","nextState","store","options","useHook","value","set","WeakSet","middleware","initialized","getState","added","values","forEach","r","has","add","push","action","reduce","next","mw","keys","Object","prevState","key","prevValue","nextValue","assign","forceUpdate","onMount","Array","isArray","ref","setter","current","defaultValue","use","effect","factory","binded","dispose","memo","context","contextName","shift","Consumer","Provider","children","handler","mount","didMountHandlers","props","PureComponent","displayName","name","a","b","every"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,EAAjB;;AAEO,SAASC,QAAT,CAAkBC,OAAlB,EAA0B;AAAA,MACzBC,iBADyB;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,iGAEV,EAFU;;AAAA,wFAInB,UAACC,IAAD,EAAuB;AAAA,YAAhBC,MAAgB,uEAAP,EAAO;;AAAA;AAAA,YACvBC,WADuB,yBACvBA,WADuB;;AAAA,YAEvBC,KAFuB,GAEND,WAFM,CAEvBC,KAFuB;AAAA,YAEhBC,KAFgB,GAENF,WAFM,CAEhBE,KAFgB,EAG/B;;AACA,YAAIC,IAAI,GAAGD,KAAK,CAACD,KAAD,CAAhB,CAJ+B,CAK/B;;AACA,YAAI,CAACE,IAAD,IAAS,CAACC,UAAU,CAACD,IAAI,CAACJ,MAAN,EAAcA,MAAd,CAAxB,EAA+C;AAC7CG,UAAAA,KAAK,CAACD,KAAD,CAAL,GAAeE,IAAI,GAAG;AACpBL,YAAAA,IAAI,EAAJA,IADoB;AAEpBC,YAAAA,MAAM,EAANA,MAFoB;AAGpBE,YAAAA,KAAK,EAAEC,KAAK,CAACG;AAHO,WAAtB;AAKD;;AACD,YAAIP,IAAI,KAAKK,IAAI,CAACL,IAAlB,EAAwB;AACtB,gBAAM,IAAIQ,KAAJ,CAAU,oBAAV,CAAN;AACD;;AACDN,QAAAA,WAAW,CAACC,KAAZ;AACA,eAAOE,IAAP;AACD,OAtB4B;;AAAA,4FAwBf;AACZD,QAAAA,KAAK,EAAE,EADK;AAEZD,QAAAA,KAAK,EAAE,CAFK;AAIZM,QAAAA,OAAO,EAAE,iBAACA,QAAD,EAAUC,YAAV,EAAwBC,QAAxB,EAAqC;AAAA,sCACpB,MAAKT,WAAL,CAAiBU,KAAjB,CAAuBF,YAAvB,EAAqCC,QAArC,CADoB;AAAA;AAAA,cACvCC,KADuC;AAAA,cAChCC,QADgC;;AAG5C,mBAASC,QAAT,GAA2B;AAAA,+CAANC,IAAM;AAANA,cAAAA,IAAM;AAAA;;AACzB,gBAAMC,SAAS,GAAGP,QAAO,MAAP,UAAQG,KAAR,SAAkBG,IAAlB,EAAlB;;AACA,gBAAIC,SAAS,KAAKJ,KAAlB,EAAyB;AACvBC,cAAAA,QAAQ,CAAED,KAAK,GAAGI,SAAV,CAAR;AACD;AACF;;AAED,iBAAO,CAACJ,KAAD,EAAQE,QAAR,CAAP;AACD,SAfW;AAiBZG,QAAAA,KAAK,EAAE,eAACC,OAAD,EAA0B;AAAA,cAAhBjB,MAAgB,uEAAP,EAAO;AAAA,yBACIiB,OADJ;AAAA,cACvBR,YADuB,YACvBA,YADuB;AAAA,cACTC,QADS,YACTA,QADS;;AAG/B,cAAMN,IAAI,GAAG,MAAKc,OAAL,CAAa,OAAb,EAAsBlB,MAAtB,CAAb;;AAEA,cAAI,CAACI,IAAI,CAACe,KAAV,EAAiB;AACf,gBAAI,OAAOF,OAAP,KAAmB,UAAvB,EAAmC;AACjCA,cAAAA,OAAO,GAAG;AAAET,gBAAAA,OAAO,EAAES;AAAX,eAAV;AACD;;AAED,gBAAMG,GAAG,GAAG,IAAIC,OAAJ,EAAZ;AACA,gBAAMb,SAAO,GAAG,EAAhB;AACA,gBAAMc,WAAU,GAAG,EAAnB;AACA,gBAAIC,WAAW,GAAG,KAAlB;AACA,gBAAIZ,KAAK,GAAGF,YAAZ;;AAEA,gBAAMO,KAAK,qBACNL,KADM;AAETa,cAAAA,QAAQ,EAAE;AAAA,uBAAMb,KAAN;AAAA,eAFD;AAGTH,cAAAA,OAAO,EAAE,mBAAe;AACtB,oBAAIiB,KAAK,GAAG,KAAZ;;AADsB,mDAAXC,MAAW;AAAXA,kBAAAA,MAAW;AAAA;;AAEtBA,gBAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,CAAC,EAAI;AAClB,sBAAIR,GAAG,CAACS,GAAJ,CAAQD,CAAR,CAAJ,EAAgB;AACd;AACD;;AAEDR,kBAAAA,GAAG,CAACU,GAAJ,CAAQF,CAAR;;AACApB,kBAAAA,SAAO,CAACuB,IAAR,CAAaH,CAAb;;AACAH,kBAAAA,KAAK,GAAG,IAAR;AACD,iBARD;AASAA,gBAAAA,KAAK,IAAIT,KAAK,CAACH,QAAN,CAAe;AAAEd,kBAAAA,IAAI,EAAE;AAAR,iBAAf,CAAT;AACD,eAfQ;AAgBTuB,cAAAA,UAAU,EAAE,sBAAe;AAAA,mDAAXI,MAAW;AAAXA,kBAAAA,MAAW;AAAA;;AACzBA,gBAAAA,MAAM,CAACC,OAAP,CAAe,UAAAC,CAAC,EAAI;AAClB,sBAAIR,GAAG,CAACS,GAAJ,CAAQD,CAAR,CAAJ,EAAgB;AACd;AACD;;AAEDR,kBAAAA,GAAG,CAACU,GAAJ,CAAQF,CAAR;;AACAN,kBAAAA,WAAU,CAACS,IAAX,CAAgBH,CAAC,CAACZ,KAAD,CAAjB;AACD,iBAPD;AAQD,eAzBQ;AA0BTH,cAAAA,QAAQ,EAAE,kBAAAmB,MAAM,EAAI;AAClB,oBAAI,OAAOA,MAAP,KAAkB,UAAtB,EAAkC;AAChC,yBAAOA,MAAM,CAAChB,KAAK,CAACH,QAAP,EAAiBG,KAAK,CAACQ,QAAvB,CAAb;AACD;;AACDF,gBAAAA,WAAU,CAACW,MAAX,CACE,UAACC,IAAD,EAAOC,EAAP;AAAA,yBAAc,UAAAH,MAAM;AAAA,2BAAIG,EAAE,CAACD,IAAD,CAAF,CAASF,MAAT,CAAJ;AAAA,mBAApB;AAAA,iBADF,EAEE,UAAAA,MAAM,EAAI;AACR,sBAAMjB,SAAS,GAAGP,SAAO,CAACyB,MAAR,CAAe,UAACtB,KAAD,EAAQH,OAAR,EAAoB;AACnD,wBAAI,OAAOA,OAAP,KAAmB,UAAvB,EAAmC;AACjC,6BAAOA,OAAO,CAACG,KAAD,EAAQqB,MAAR,CAAd;AACD;;AACD,wBAAMI,IAAI,GAAGC,MAAM,CAACD,IAAP,CAAY5B,OAAZ,CAAb;AACA,wBAAM8B,SAAS,GAAG3B,KAAlB;;AACA,4CAAkByB,IAAlB,gBAAwB;AAAnB,0BAAMG,GAAG,GAAIH,IAAJ,KAAT;AACH,0BAAMI,SAAS,GAAG7B,KAAK,CAAC4B,GAAD,CAAvB;AACA,0BAAME,SAAS,GAAGjC,OAAO,CAAC+B,GAAD,CAAP,CAAaC,SAAb,EAAwBR,MAAxB,CAAlB;;AACA,0BAAIQ,SAAS,KAAKC,SAAlB,EAA6B;AAC3B,4BAAIH,SAAS,KAAK3B,KAAlB,EAAyB;AACvBA,0BAAAA,KAAK,qBAAQ2B,SAAR,CAAL;AACD;;AACD3B,wBAAAA,KAAK,CAAC4B,GAAD,CAAL,GAAaE,SAAb;AACD;AACF;;AACD,2BAAO9B,KAAP;AACD,mBAjBiB,EAiBfA,KAjBe,CAAlB;;AAkBA,sBAAII,SAAS,KAAKJ,KAAlB,EAAyB;AACvBA,oBAAAA,KAAK,GAAGI,SAAR,CADuB,CAEvB;;AACAX,oBAAAA,IAAI,CAACe,KAAL,GAAakB,MAAM,CAACK,MAAP,CAAc,EAAd,EAAkB1B,KAAlB,EAAyBL,KAAzB,CAAb;AACAD,oBAAAA,QAAQ,IAAIA,QAAQ,CAACC,KAAD,CAApB;;AACA,wBAAIY,WAAJ,EAAiB;AACf,4BAAKoB,WAAL;AACD,qBAFD,MAEO;AACL,4BAAKC,OAAL,CAAa;AAAA,+BAAM,MAAKD,WAAL,EAAN;AAAA,uBAAb;AACD;AACF;AACF,iBAhCH,EAiCEX,MAjCF;AAkCD;AAhEQ,cAAX,CAXe,CA8Ef;;;AACA,gBAAIf,OAAO,CAACT,OAAZ,EAAqB;AACnBQ,cAAAA,KAAK,CAACR,OAAN,OAAAQ,KAAK,qBACC6B,KAAK,CAACC,OAAN,CAAc7B,OAAO,CAACT,OAAtB,IACAS,OAAO,CAACT,OADR,GAEA,CAACS,OAAO,CAACT,OAAT,CAHD,EAAL;AAKD,aArFc,CAuFf;;;AACA,gBAAIS,OAAO,CAACK,UAAZ,EAAwB;AACtBN,cAAAA,KAAK,CAACM,UAAN,OAAAN,KAAK,qBACC6B,KAAK,CAACC,OAAN,CAAc7B,OAAO,CAACK,UAAtB,IACAL,OAAO,CAACK,UADR,GAEA,CAACL,OAAO,CAACK,UAAT,CAHD,EAAL;AAKD;;AACDlB,YAAAA,IAAI,CAACe,KAAL,GAAaH,KAAb;AACAO,YAAAA,WAAW,GAAG,IAAd;AACD;;AACD,iBAAOnB,IAAI,CAACe,KAAZ;AACD,SAzHW;AA2HZ4B,QAAAA,GAAG,EAAE,eAAM;AACT,cAAM3C,IAAI,GAAG,MAAKc,OAAL,CAAa,KAAb,CAAb;;AACA,cAAI,CAACd,IAAI,CAAC4C,MAAV,EAAkB;AAChB5C,YAAAA,IAAI,CAAC4C,MAAL,GAAc,UAAA7B,KAAK;AAAA,qBAAKf,IAAI,CAAC4C,MAAL,CAAYC,OAAZ,GAAsB9B,KAA3B;AAAA,aAAnB;AACD;;AACD,iBAAOf,IAAI,CAAC4C,MAAZ;AACD,SAjIW;AAmIZrC,QAAAA,KAAK,EAAE,eAACuC,YAAD,EAAexC,QAAf,EAA4B;AACjC,cAAMN,IAAI,GAAG,MAAKc,OAAL,CAAa,OAAb,CAAb;;AACA,cAAI,CAACd,IAAI,CAAC4C,MAAV,EAAkB;AAChB5C,YAAAA,IAAI,CAACe,KAAL,GAAa+B,YAAb;;AACA9C,YAAAA,IAAI,CAAC4C,MAAL,GAAc,UAAAP,SAAS,EAAI;AACzB,kBAAIA,SAAS,KAAKrC,IAAI,CAACe,KAAvB,EAA8B;AAC9Bf,cAAAA,IAAI,CAACe,KAAL,GAAasB,SAAb;AACA/B,cAAAA,QAAQ,IAAIA,QAAQ,CAACN,IAAI,CAACe,KAAN,CAApB,CAHyB,CAIzB;;AACA,oBAAKwB,WAAL;AACD,aAND;AAOD;;AAED,iBAAO,CAACvC,IAAI,CAACe,KAAN,EAAaf,IAAI,CAAC4C,MAAlB,CAAP;AACD,SAjJW;AAmJZG,QAAAA,GAAG,EAAE,aAAC/C,IAAD;AAAA,6CAAUU,IAAV;AAAUA,YAAAA,IAAV;AAAA;;AAAA,iBAAmBV,IAAI,MAAJ,UAAK,MAAKH,WAAV,SAA0Ba,IAA1B,EAAnB;AAAA,SAnJO;AAqJZsC,QAAAA,MAAM,EAAE,gBAACC,OAAD,EAAUrD,MAAV,EAAqB;AAC3B,cAAMI,IAAI,GAAG,MAAKc,OAAL,CAAa,QAAb,EAAuBlB,MAAvB,CAAb;;AACA,cAAI,CAACI,IAAI,CAACkD,MAAV,EAAkB;AAChBlD,YAAAA,IAAI,CAACkD,MAAL,GAAc,IAAd;;AACA,kBAAKV,OAAL,CAAa,YAAM;AACjBxC,cAAAA,IAAI,CAACmD,OAAL,IAAgBnD,IAAI,CAACmD,OAAL,EAAhB;AACAnD,cAAAA,IAAI,CAACmD,OAAL,GAAeF,OAAO,MAAP,4BAAWrD,MAAX,EAAf;AACD,aAHD;AAID;AACF,SA9JW;AAgKZwD,QAAAA,IAAI,EAAE,cAACH,OAAD,EAAUrD,MAAV,EAAqB;AACzB,cAAMI,IAAI,GAAG,MAAKc,OAAL,CAAa,MAAb,EAAqBlB,MAArB,CAAb;;AACA,cAAI,CAACI,IAAI,CAACkD,MAAV,EAAkB;AAChBlD,YAAAA,IAAI,CAACkD,MAAL,GAAc,IAAd;AACAlD,YAAAA,IAAI,CAACe,KAAL,GAAakC,OAAO,EAApB;AACD;;AACD,iBAAOjD,IAAI,CAACe,KAAZ;AACD,SAvKW;AAyKZsC,QAAAA,OAAO,EAAE,mBAAa;AACpB,cAAIC,WAAW,GAAG,SAAlB;;AADoB,6CAAT5C,IAAS;AAATA,YAAAA,IAAS;AAAA;;AAEpB,cAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AAC/B4C,YAAAA,WAAW,GAAG5C,IAAI,CAAC6C,KAAL,EAAd;AACD;;AACD,cAAMF,OAAO,GACX9D,QAAQ,CAAC+D,WAAD,CAAR,KAA0B/D,QAAQ,CAAC+D,WAAD,CAAR,GAAwB,2BAAlD,CADF,CALoB,CAQpB;;AACA,cAAI,OAAO5C,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAvB,EAAmC;AACjC,mBAAO,0BAAc2C,OAAO,CAACG,QAAtB,EAAgC,EAAhC,EAAoC9C,IAAI,CAAC,CAAD,CAAxC,CAAP;AACD;;AACD,iBAAO,0BAAc2C,OAAO,CAACI,QAAtB,EAAgC;AACrC1C,YAAAA,KAAK,EAAEL,IAAI,CAAC,CAAD,CAD0B;AAErCgD,YAAAA,QAAQ,EAAEhD,IAAI,CAAC,CAAD;AAFuB,WAAhC,CAAP;AAID;AAzLW,OAxBe;;AAAA,wFAoNnB,UAAAiD,OAAO,EAAI;AACnB,YAAI,MAAKC,KAAT,EAAgB;AACdD,UAAAA,OAAO;AACR,SAFD,MAEO;AACL,gBAAKE,gBAAL,CAAsBlC,IAAtB,CAA2BgC,OAA3B;AACD;AACF,OA1N4B;;AAAA;AAAA;;AAAA;AAAA;AAAA,0CA4NT;AAClB,aAAKC,KAAL,GAAa,IAAb;AACA,aAAKC,gBAAL,CAAsBtC,OAAtB,CAA8B,UAAAoC,OAAO;AAAA,iBAAIA,OAAO,EAAX;AAAA,SAArC;AACA,aAAKE,gBAAL,CAAsB3D,MAAtB,GAA+B,CAA/B;AACD;AAhO4B;AAAA;AAAA,6CAkON;AACrB,aAAK0D,KAAL,GAAa,KAAb;AACA,aAAK/D,WAAL,CAAiBE,KAAjB,CAAuBwB,OAAvB,CAA+B,UAAAvB,IAAI,EAAI;AACrCA,UAAAA,IAAI,CAACL,IAAL,KAAc,QAAd,IAA0BK,IAAI,CAACmD,OAA/B,IAA0CnD,IAAI,CAACmD,OAAL,EAA1C;AACD,SAFD;AAGD;AAvO4B;AAAA;AAAA,+BAyOpB;AAAA,YACCW,KADD,GACwB,IADxB,CACCA,KADD;AAAA,YACQjE,WADR,GACwB,IADxB,CACQA,WADR,EAEP;;AACAA,QAAAA,WAAW,CAACC,KAAZ,GAAoB,CAApB;AACA,eAAOL,OAAM,CAACqE,KAAD,EAAQjE,WAAR,CAAb;AACD;AA9O4B;;AAAA;AAAA,IACCkE,oBADD;;AAiP/BrE,EAAAA,iBAAiB,CAACsE,WAAlB,GAAgCvE,OAAM,CAACuE,WAAP,IAAsBvE,OAAM,CAACwE,IAA7D;AAEA,SAAOvE,iBAAP;AACD;;AAED,SAASO,UAAT,CAAoBiE,CAApB,EAAuBC,CAAvB,EAA0B;AACxB,SAAOD,CAAC,CAACE,KAAF,CAAQ,UAACrD,KAAD,EAAQjB,KAAR;AAAA,WAAkBqE,CAAC,CAACrE,KAAD,CAAD,KAAaiB,KAA/B;AAAA,GAAR,CAAP;AACD","sourcesContent":["import { PureComponent, createContext, createElement } from \"react\";\n\nconst contexts = {};\n\nexport function stateful(render) {\n  class StatefulComponent extends PureComponent {\n    didMountHandlers = [];\n\n    useHook = (type, inputs = []) => {\n      const { hookContext } = this;\n      const { index, hooks } = hookContext;\n      // create new hook if not any\n      let hook = hooks[index];\n      // reset hook if inputs changed\n      if (!hook || !arrayEqual(hook.inputs, inputs)) {\n        hooks[index] = hook = {\n          type,\n          inputs,\n          index: hooks.length\n        };\n      }\n      if (type !== hook.type) {\n        throw new Error(\"Invalid hook usage\");\n      }\n      hookContext.index++;\n      return hook;\n    };\n\n    hookContext = {\n      hooks: [],\n      index: 0,\n\n      reducer: (reducer, initialState, onChange) => {\n        let [state, setState] = this.hookContext.state(initialState, onChange);\n\n        function dispatch(...args) {\n          const nextState = reducer(state, ...args);\n          if (nextState !== state) {\n            setState((state = nextState));\n          }\n        }\n\n        return [state, dispatch];\n      },\n\n      store: (options, inputs = []) => {\n        const { initialState, onChange } = options;\n\n        const hook = this.useHook(\"store\", inputs);\n\n        if (!hook.value) {\n          if (typeof options === \"function\") {\n            options = { reducer: options };\n          }\n\n          const set = new WeakSet();\n          const reducer = [];\n          const middleware = [];\n          let initialized = false;\n          let state = initialState;\n\n          const store = {\n            ...state,\n            getState: () => state,\n            reducer: (...values) => {\n              let added = false;\n              values.forEach(r => {\n                if (set.has(r)) {\n                  return;\n                }\n\n                set.add(r);\n                reducer.push(r);\n                added = true;\n              });\n              added && store.dispatch({ type: \"@@init\" });\n            },\n            middleware: (...values) => {\n              values.forEach(r => {\n                if (set.has(r)) {\n                  return;\n                }\n\n                set.add(r);\n                middleware.push(r(store));\n              });\n            },\n            dispatch: action => {\n              if (typeof action === \"function\") {\n                return action(store.dispatch, store.getState);\n              }\n              middleware.reduce(\n                (next, mw) => action => mw(next)(action),\n                action => {\n                  const nextState = reducer.reduce((state, reducer) => {\n                    if (typeof reducer === \"function\") {\n                      return reducer(state, action);\n                    }\n                    const keys = Object.keys(reducer);\n                    const prevState = state;\n                    for (const key of keys) {\n                      const prevValue = state[key];\n                      const nextValue = reducer[key](prevValue, action);\n                      if (prevValue !== nextValue) {\n                        if (prevState === state) {\n                          state = { ...prevState };\n                        }\n                        state[key] = nextValue;\n                      }\n                    }\n                    return state;\n                  }, state);\n                  if (nextState !== state) {\n                    state = nextState;\n                    // should renew hook value to make sure context updated\n                    hook.value = Object.assign({}, store, state);\n                    onChange && onChange(state);\n                    if (initialized) {\n                      this.forceUpdate();\n                    } else {\n                      this.onMount(() => this.forceUpdate());\n                    }\n                  }\n                }\n              )(action);\n            }\n          };\n\n          // reducer if any\n          if (options.reducer) {\n            store.reducer(\n              ...(Array.isArray(options.reducer)\n                ? options.reducer\n                : [options.reducer])\n            );\n          }\n\n          // add middleware if any\n          if (options.middleware) {\n            store.middleware(\n              ...(Array.isArray(options.middleware)\n                ? options.middleware\n                : [options.middleware])\n            );\n          }\n          hook.value = store;\n          initialized = true;\n        }\n        return hook.value;\n      },\n\n      ref: () => {\n        const hook = this.useHook(\"ref\");\n        if (!hook.setter) {\n          hook.setter = value => (hook.setter.current = value);\n        }\n        return hook.setter;\n      },\n\n      state: (defaultValue, onChange) => {\n        const hook = this.useHook(\"state\");\n        if (!hook.setter) {\n          hook.value = defaultValue;\n          hook.setter = nextValue => {\n            if (nextValue === hook.value) return;\n            hook.value = nextValue;\n            onChange && onChange(hook.value);\n            // perform forceUpdate instead of setState({}) because it works faster\n            this.forceUpdate();\n          };\n        }\n\n        return [hook.value, hook.setter];\n      },\n\n      use: (hook, ...args) => hook(this.hookContext, ...args),\n\n      effect: (factory, inputs) => {\n        const hook = this.useHook(\"effect\", inputs);\n        if (!hook.binded) {\n          hook.binded = true;\n          this.onMount(() => {\n            hook.dispose && hook.dispose();\n            hook.dispose = factory(...inputs);\n          });\n        }\n      },\n\n      memo: (factory, inputs) => {\n        const hook = this.useHook(\"memo\", inputs);\n        if (!hook.binded) {\n          hook.binded = true;\n          hook.value = factory();\n        }\n        return hook.value;\n      },\n\n      context: (...args) => {\n        let contextName = \"default\";\n        if (typeof args[0] === \"string\") {\n          contextName = args.shift();\n        }\n        const context =\n          contexts[contextName] || (contexts[contextName] = createContext());\n\n        // is consumer\n        if (typeof args[0] === \"function\") {\n          return createElement(context.Consumer, {}, args[0]);\n        }\n        return createElement(context.Provider, {\n          value: args[0],\n          children: args[1]\n        });\n      }\n    };\n\n    onMount = handler => {\n      if (this.mount) {\n        handler();\n      } else {\n        this.didMountHandlers.push(handler);\n      }\n    };\n\n    componentDidMount() {\n      this.mount = true;\n      this.didMountHandlers.forEach(handler => handler());\n      this.didMountHandlers.length = 0;\n    }\n\n    componentWillUnmount() {\n      this.mount = false;\n      this.hookContext.hooks.forEach(hook => {\n        hook.type === \"effect\" && hook.dispose && hook.dispose();\n      });\n    }\n\n    render() {\n      const { props, hookContext } = this;\n      // reset hook index\n      hookContext.index = 0;\n      return render(props, hookContext);\n    }\n  }\n\n  StatefulComponent.displayName = render.displayName || render.name;\n\n  return StatefulComponent;\n}\n\nfunction arrayEqual(a, b) {\n  return a.every((value, index) => b[index] === value);\n}\n"],"file":"index.js"}